# [TimeManager] by ArVdC
# config.yml
# -----
# *version*
#  This field is automatically checked and refreshed, don't modify it manually.
# -----
# *refreshRate*
#  The delay in ticks before actualizing the speed stretch/expand effect.
#  Must be an integer between 2 and 20.
#  Default value is 10 ticks, a too small value can cause server lags, depends on the server resources and the number of maps using a 'speed' modifier.
# -----
# *wakeUpTick*
#  Players can wake up later than 6:00 am. Possible values are ticks from #0 to #6000.
# -----
# *newDayAt*
#  It is possible to determine whether the new day will be counted from 06:00 (= tick #0) or from 00:00 (= tick #18000). Accepted values are 06:00, #0 or dawn and 00:00, #18000 or midnight.
# -----
# *worldsList*
#  The list of available worlds will be refreshed on server startup. Nether and Ender worlds will be erased if needed.
#   *start*
#    Define the time at server startup for the specified world. By default, all worlds will start at tick #0. The tab completion also provides presets like "day", "night", etc.
#    If a world is using the real time speed, the start value will determine the UTC time shift and values like +1 or -1 will be accepted.
#   *daySpeed & nightSpeed*
#    Define if the time will be locked, accelerated, decelerated or normally spend for the specified world.
#    Use 0.0 to freeze time, numbers from 0.01 to 0.99 to slow time, 1.0 to get normal speed and numbers from 1.1 to 20.0 to speedup time.
#    Set this value to 24.0 or 'realtime' to make the world time match the real speed time.
#    Night and day speeds can be different from each other.
#    It is also possible to use a 00d-00h-00m-00s format instead of the multiplier.
#   *sleep*
#    Since sleeping at night causes significant time changes, this is a priority setting to manage if you want to keep synchronization between maps.
#    Three values are allowed: 'true', 'false' and 'linked'.
#    If 'true', players can sleep until the next morning as usual.
#    Turning this to 'false' will cancel sleep events but still allow the player to get into a bed and save their position.
#    If you want to both allow sleep and keep the same time in multiple worlds, you can use the 'linked' function which allows a group of worlds to spend the night together.
#   *sync*
#    Define if the speed distortion method will increase/decrease the world's actual tick (false), or fit the theoretical tick value based on the server one (true).
#    By default, all worlds will start with parameter false. Real time based worlds and frozen worlds do not use this option, on the other hand this will affect even the worlds with a normal speed.
#    Enabling sync prevents players from sleeping and will automatically set the 'sleep' value to 'false'.
#   *firstStartTime*
#    This option allows you to force the time at which a world starts when starting the server.
#    The 'default' value enables resynchronization on startup set by 'resetOnStartup' (see below for details).
#    The 'previous' value returns the time in the world before the server was shut down.
#    The 'start' value forces the world to start at the time specified in the world's 'start' node.
#   *nightSkipMode*
#    This option enables an acceleration of time from the moment players sleep until morning. ('default', 'instant' or 'animation')
#   *nightSkipRequiredPlayers*
#    Amount or percentage of players in a world who should sleep, depending on whether the "%" symbol is used or not.
# -----
# *initialTick*
#   *initialTickNb*
#    This is the initial server tick that will be used as reference for time calculations. This value will be saved here unless you are using mySQL.
#   *resetOnStartup*
#    By setting it to 'true', the plugin will create a new reference tick on each server startup. World timers will resume at the time specified in their 'start' node.
#    If resetOnStartup is set to 'false', your server will create a new reference tick only at the first startup, which makes it possible to create an artificial continuity in the timers of the worlds despite a stop/restart of the server.
#    In case of working with several servers, at most one of them should turn it true. Set every related servers with an 'false' value will make the reference tick immutable.
#   *useMySqlDb*
#    Enable or not the mySql database (true or false), its provide a possible sharing of the reference server startup tick. See lower for more details.
# ----- 
# *mySql*
#  Permit to share the initial tick from a reference server to others. The first server using the database will create a reference tick into it.
#  Use this with or without BungeeCord, just set 'initialTick.isHardSaved' and 'initialTick.useMySqlDb' to 'true' in each config.yml file.
#  *host* *port* *ssl* *database* *username* *password*
#    For 'host', use your server ip. (for example: 'localhost' or 'www.minecraftserver.com').
#    Default mySQL port is '3306' but you could change it to match your custom configuration.
#    Default database name is 'timemanager' but you could choose anything else to order it correctly.
#    If you don't handle databases, follow this tutorial to setup an user account: http://www.yourwebskills.com/dbphpmyadminusers.php
# -----
# *updateMsgSrc*
#  Choose a value between 'Bukkit', 'Curse', 'Spigot' or 'Github' to check the update when loading the plugin. Set to 'none', 'false' or '' to avoid verification. (MC 1.8.8+ only)
# -----
# *placeholders*
#  It is possible to use TimeManager placeholders in other plugins. To do this, set the value to 'true' and place the third-party API in your 'plugins' folder.
#  The available placeholders are described in lang.yml file.
#  PlaceholderAPI (www.spigotmc.org/resources/placeholderapi.6245) -> Use %tm_xxx% instead of {tm_xxx}
#  MVdWPlaceholderAPI (www.spigotmc.org/resources/mvdwplaceholderapi.11182) -> Use {tm_xxx}
#   *inChatEnable*
#    If true, the plugin's placeholders will be interpreted in chat messages.
#   *inCommandsEnable*
#    If true, the plugin's placeholders will be interpreted in any commands launched by the console, players or command blocks.
# -----
# *debugMode*
#  Set true to enable colored verbose messages in the console. Useful to understand some mechanisms of this plugin.
# -----

version: 1.10.1-b
refreshRate: 2
wakeUpTick: 0
newDayAt: 06:00
worldsList:
  world:
    start: 0
    daySpeed: 0.722222222
    nightSpeed: 1.833333333
    sleep: 'true'
    sync: 'false'
    firstStartTime: default
    nightSkipMode: default
    nightSkipRequiredPlayers: 100%
  world_nether:
    start: 0
    daySpeed: 1.0
    nightSpeed: 1.833333333
    sleep: 'false'
    sync: 'false'
    firstStartTime: default
    nightSkipMode: default
    nightSkipRequiredPlayers: 100%
  world_the_end:
    start: 0
    daySpeed: 1.0
    nightSpeed: 1.833333333
    sleep: 'false'
    sync: 'false'
    firstStartTime: default
    nightSkipMode: default
    nightSkipRequiredPlayers: 100%
initialTick:
  useMySql: 'false'
  resetOnStartup: 'true'
  initialTickNb: 1086040
mySql:
  dbPrefix: ''
  username: ''
  password: ''
  host: localhost
  port: '3306'
  ssl: 'false'
  database: timemanager
  table: refTick
updateMsgSrc: None
placeholders:
  PlaceholderAPI: 'false'
  MVdWPlaceholderAPI: 'false'
  inChatEnable: 'true'
  inCommandsEnable: 'true'
debugMode: 'false'
